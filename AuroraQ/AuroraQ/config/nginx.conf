# Nginx 설정 (선택적 리버스 프록시)
# AuroraQ ONNX Sentiment Service

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 로깅 형식
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # 기본 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    # 업스트림 정의
    upstream onnx_sentiment {
        server onnx-sentiment:8001;
        keepalive 32;
    }

    upstream grafana {
        server grafana:3000;
        keepalive 8;
    }

    upstream prometheus {
        server prometheus:9090;
        keepalive 8;
    }

    # 기본 서버 (ONNX API)
    server {
        listen 80 default_server;
        server_name _;

        # 보안 헤더
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # 클라이언트 최대 업로드 크기
        client_max_body_size 10M;
        
        # ONNX Sentiment API 프록시
        location /api/ {
            proxy_pass http://onnx_sentiment;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 타임아웃 설정
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # ONNX 특정 엔드포인트
        location /onnx/ {
            proxy_pass http://onnx_sentiment;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 문서화
        location /docs {
            proxy_pass http://onnx_sentiment;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 헬스체크
        location /health {
            proxy_pass http://onnx_sentiment/onnx/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            access_log off;
        }

        # 메트릭 (보안 고려)
        location /metrics {
            proxy_pass http://onnx_sentiment:8002/metrics;
            proxy_http_version 1.1;
            
            # IP 제한 (필요시 설정)
            # allow 127.0.0.1;
            # allow 10.0.0.0/8;
            # deny all;
        }

        # Grafana 대시보드
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Prometheus (보안 고려)
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # IP 제한 (필요시 설정)
            # allow 127.0.0.1;
            # allow 10.0.0.0/8;
            # deny all;
        }

        # 기본 위치
        location / {
            return 200 '{"service":"AuroraQ ONNX Sentiment","status":"running","version":"2.0.0"}';
            add_header Content-Type application/json;
        }

        # 404 에러 처리
        error_page 404 /404.html;
        location = /404.html {
            return 404 '{"error":"Not Found","message":"API endpoint not found"}';
            add_header Content-Type application/json;
        }

        # 50x 에러 처리
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 500 '{"error":"Internal Server Error","message":"Service temporarily unavailable"}';
            add_header Content-Type application/json;
        }
    }

    # SSL 설정 (HTTPS 사용시)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # SSL 최적화
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # 위의 location 블록들을 여기에 복사
    # }

    # HTTP -> HTTPS 리다이렉트
    # server {
    #     listen 80;
    #     server_name your-domain.com;
    #     return 301 https://$host$request_uri;
    # }
}