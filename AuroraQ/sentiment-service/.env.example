# AuroraQ Sentiment Service Environment Configuration
# VPS Production Environment Template

# =============================================================================
# Service Configuration
# =============================================================================
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO

# Server Configuration
HOST=0.0.0.0
PORT=8000
GRPC_PORT=50051
MAX_WORKERS=2  # VPS 최적화 (CPU 코어 수에 맞게 조정)

# =============================================================================
# Redis Configuration
# =============================================================================
REDIS_URL=redis://redis:6379/0
REDIS_DB=0
CACHE_TTL=300  # 5분

# =============================================================================
# FinBERT Model Configuration
# =============================================================================
FINBERT_MODEL_NAME=ProsusAI/finbert
FINBERT_MODEL_PATH=/app/models/finbert
FINBERT_CACHE_DIR=/app/cache/transformers
FINBERT_MAX_LENGTH=512
FINBERT_BATCH_SIZE=8  # VPS 리소스에 맞게 조정

# =============================================================================
# Performance Configuration
# =============================================================================
ENABLE_MODEL_CACHING=true
MODEL_WARMUP=true
MAX_CONCURRENT_REQUESTS=50
REQUEST_TIMEOUT=30.0

# Fusion Configuration
FUSION_OUTLIER_THRESHOLD=3.0
FUSION_CONFIDENCE_THRESHOLD=0.6

# =============================================================================
# Security Configuration
# =============================================================================
# VPS IP 주소를 포함하도록 설정
ALLOWED_HOSTS=109.123.239.30,localhost,127.0.0.1
CORS_ORIGINS=*
API_KEY_HEADER=X-API-Key

# =============================================================================
# Monitoring Configuration
# =============================================================================
ENABLE_METRICS=true
PROMETHEUS_PORT=8080
HEALTH_CHECK_INTERVAL=30

# Logging Configuration
LOG_FORMAT=json
LOG_FILE_PATH=/app/logs/sentiment-service.log
LOG_ROTATION=1 day
LOG_RETENTION=30 days

# =============================================================================
# External API Keys (필수 설정 - 실제 키 값으로 교체하세요)
# =============================================================================

# Google News API (Google Cloud Console에서 발급)
GOOGLE_NEWS_API_KEY=your_google_news_api_key_here

# Yahoo Finance API (RapidAPI에서 발급)
YAHOO_FINANCE_API_KEY=your_yahoo_finance_api_key_here

# NewsAPI (newsapi.org에서 발급)
NEWSAPI_KEY=your_newsapi_key_here

# Finnhub API (finnhub.io에서 발급)  
FINNHUB_API_KEY=your_finnhub_api_key_here

# Reddit API (reddit.com/prefs/apps에서 발급)
REDDIT_CLIENT_ID=your_reddit_client_id_here
REDDIT_CLIENT_SECRET=your_reddit_client_secret_here

# Google Custom Search (Google Cloud Console에서 발급)
GOOGLE_SEARCH_API_KEY=your_google_search_api_key_here
GOOGLE_CUSTOM_SEARCH_ID=your_custom_search_engine_id_here

# Bing Search API (Azure Cognitive Services에서 발급)
BING_SEARCH_API_KEY=your_bing_search_api_key_here

# =============================================================================
# AuroraQ Integration (메인 트레이딩 시스템 연동)
# =============================================================================
# AuroraQ 메인 시스템 API URL
AURORA_API_URL=http://host.docker.internal:8080
# 또는 실제 AuroraQ 서버 주소: http://your-aurora-server:port

# AuroraQ API 인증 키
AURORA_API_KEY=your_aurora_api_key_here

# Connection Settings
AURORA_TIMEOUT=30
AURORA_RETRY_ATTEMPTS=3

# =============================================================================
# Telegram Notifications (텔레그램 알림 설정)
# =============================================================================

# 텔레그램 봇 토큰 (BotFather에서 발급)
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# 텔레그램 채팅방 ID들 (동일한 ID를 여러 채널에 사용 가능)
TELEGRAM_CHAT_ID_GENERAL=your_chat_id_here     # 일반 알림
TELEGRAM_CHAT_ID_TRADING=your_chat_id_here     # 매매 신호
TELEGRAM_CHAT_ID_EVENTS=your_chat_id_here      # 빅 이벤트
TELEGRAM_CHAT_ID_SYSTEM=your_chat_id_here      # 시스템 상태

# 텔레그램 알림 설정
TELEGRAM_ENABLED=true                          # 알림 활성화 여부
TELEGRAM_QUIET_HOURS_START=23                 # 조용한 시간 시작 (23시)
TELEGRAM_QUIET_HOURS_END=7                    # 조용한 시간 종료 (7시)

# =============================================================================
# News Processing Configuration
# =============================================================================
# VPS 리소스를 고려한 최적화 설정
NEWS_MAX_ARTICLES=30
NEWS_HOURS_BACK=12
NEWS_RELEVANCE_THRESHOLD=0.4

# Sentiment History
SENTIMENT_HISTORY_PATH=/app/data/sentiment_history.csv
SENTIMENT_HISTORY_SIZE=10000

# =============================================================================
# Feedly Integration (Legacy, 백업용)
# =============================================================================
FEEDLY_ACCESS_TOKEN=your_feedly_access_token_here
FEEDLY_USER_ID=your_feedly_user_id_here
FEEDLY_RATE_LIMIT=100

# =============================================================================
# API 키 발급 방법
# =============================================================================

# 1. Google News API:
#    - Google Cloud Console (console.cloud.google.com) 접속
#    - 새 프로젝트 생성 또는 기존 프로젝트 선택
#    - APIs & Services > Library > News API 검색 및 활성화
#    - APIs & Services > Credentials > API 키 생성

# 2. Yahoo Finance API:
#    - RapidAPI (rapidapi.com) 가입
#    - Yahoo Finance API 검색 및 구독
#    - Dashboard에서 API 키 확인

# 3. NewsAPI:
#    - newsapi.org 가입
#    - Get API Key 클릭하여 무료 키 발급

# 4. Finnhub API:
#    - finnhub.io 가입
#    - Dashboard에서 API 키 확인

# 5. Reddit API:
#    - reddit.com 로그인
#    - Preferences > Apps > Create App
#    - Script 타입으로 생성하여 Client ID/Secret 획득

# 6. Google Custom Search:
#    - Google Cloud Console에서 Custom Search API 활성화
#    - Programmable Search Engine (cse.google.com) 에서 검색 엔진 생성
#    - Search Engine ID 획득

# 7. Bing Search API:
#    - Azure Portal (portal.azure.com) 접속
#    - Cognitive Services > Bing Search v7 리소스 생성
#    - Keys and Endpoint에서 API 키 확인

# =============================================================================
# 텔레그램 봇 설정 방법
# =============================================================================

# 1. 텔레그램 봇 생성:
#    - 텔레그램에서 @BotFather와 대화 시작
#    - /newbot 명령어 입력
#    - 봇 이름과 사용자명 설정
#    - 발급받은 토큰을 TELEGRAM_BOT_TOKEN에 입력

# 2. 채팅방 ID 확인:
#    - 봇과 개인 대화를 시작하거나 그룹에 봇 추가
#    - 브라우저에서 https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates 접속
#    - 봇에게 메시지를 보낸 후 다시 접속
#    - chat.id 값을 확인하여 TELEGRAM_CHAT_ID_* 에 입력

# 3. 그룹 채팅방 사용 시:
#    - 봇을 그룹에 추가
#    - 관리자 권한 부여 (선택적)
#    - 음수로 시작하는 chat.id 사용

# 사용 예시
# =============================================================================
# 이 파일을 .env로 복사한 후 실제 API 키 값들을 설정하세요:
# cp env.template .env
# nano .env  # 에디터로 API 키들을 실제 값으로 교체