[Unit]
Description=AuroraQ Sentiment Analysis Service
Documentation=https://github.com/your-org/AuroraQ
After=network.target docker.service
Wants=network.target
Requires=docker.service

[Service]
Type=forking
User=auroaq
Group=auroaq
WorkingDirectory=/opt/AuroraQ/sentiment-service

# Environment variables
Environment=PYTHONPATH=/opt/AuroraQ
Environment=AURORA_ENV=production
Environment=DOCKER_COMPOSE_FILE=docker-compose.yml

# Start command
ExecStartPre=/usr/bin/docker-compose -f ${DOCKER_COMPOSE_FILE} down
ExecStart=/usr/bin/docker-compose -f ${DOCKER_COMPOSE_FILE} up -d
ExecReload=/usr/bin/docker-compose -f ${DOCKER_COMPOSE_FILE} restart
ExecStop=/usr/bin/docker-compose -f ${DOCKER_COMPOSE_FILE} down

# Health check
ExecStartPost=/bin/bash -c 'sleep 30 && curl -f http://localhost:8000/health || exit 1'

# Restart policy
Restart=on-failure
RestartSec=10
StartLimitInterval=300
StartLimitBurst=5

# Resource limits
MemoryLimit=2G
CPUQuota=200%

# Security settings
NoNewPrivileges=yes
ProtectSystem=strict
ProtectHome=yes
ReadWritePaths=/opt/AuroraQ/sentiment-service/logs /opt/AuroraQ/logs /tmp

# Logging
StandardOutput=journal
StandardError=journal
SyslogIdentifier=auroaq-sentiment

[Install]
WantedBy=multi-user.target